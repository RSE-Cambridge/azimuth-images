name: Build images for PR
on:
  pull_request:
    types:
      - opened
      - synchronize
      - ready_for_review
      - reopened
    branches:
      - main

jobs:
  # This job exists so that PRs from outside the main repo are rejected
  fail_on_remote:
    runs-on: ubuntu-latest
    steps:
      - name: PR must be from a branch in the stackhpc/azimuth-images repo
        run: exit ${{ github.repository == 'stackhpc/azimuth-images' && '0' || '1' }}

  read_builds:
    needs: [fail_on_remote]
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    outputs:
      builds: ${{ steps.builds-as-json.outputs.builds }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Install script dependencies
        run: pip install -r ./requirements.txt

      - name: Get builds as JSON
        id: builds-as-json
        run: ./bin/builds-as-json

  build_images:
    needs: [read_builds]
    if: ${{ !github.event.pull_request.draft }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.read_builds.outputs.builds) }}
    name: ${{ matrix.name }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # We only build images whose dependencies have changed
      - name: Check if image should be built
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: ${{ matrix.path-filters }}

      - name: Write OpenStack credentials
        run: echo "$CLOUDS_YAML_B64" | base64 -d > ./clouds.yaml
        env:
          CLOUDS_YAML_B64: ${{ secrets.CLOUDS_YAML_B64 }}
        if: ${{ steps.changes.outputs.paths == 'true' }}

      - name: Set up Packer environment
        run: ./bin/setup
        env:
          PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ steps.changes.outputs.paths == 'true' }}

      - name: Build image
        run: ./bin/build-image
        env:
          OS_CLOUD: openstack
          PACKER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ENVIRONMENT: arcus
          PACKER_TEMPLATE: ${{ matrix.template }}
          ENV_VAR_FILES: ${{ matrix.var-files }}
        if: ${{ steps.changes.outputs.paths == 'true' }}

      - name: Write matrix outputs
        uses: cloudposse/github-action-matrix-outputs-write@0.4.2
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.name }}
          outputs: |-
            id: ${{ steps.build-image.outputs.image-id }}
            manifest-extra: ${{ steps.build-image.outputs.manifest-extra }}
        if: ${{ steps.changes.outputs.paths == 'true' }}

  read_matrix_outputs:
    needs: [build_images]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Read matrix outputs
        id: matrix-outputs
        uses: cloudposse/github-action-matrix-outputs-read@0.1.1
        with:
          matrix-step-name: build_images
    outputs:
      result: ${{ steps.matrix-outputs.outputs.result }}

  delete_images:
    needs: [read_matrix_outputs]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        id: ${{ fromJson(needs.read_matrix_outputs.outputs.result).id.* }}
    steps:
      - name: Write OpenStack credentials
        run: echo "$CLOUDS_YAML_B64" | base64 -d > ./clouds.yaml
        env:
          CLOUDS_YAML_B64: ${{ secrets.CLOUDS_YAML_B64 }}

      - name: Install OpenStack client
        run: pip install python-openstackclient

      - name: Delete image
        run: openstack image delete ${{ matrix.id }}
        env:
          OS_CLOUD: openstack
