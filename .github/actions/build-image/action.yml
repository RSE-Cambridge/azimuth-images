name: Ensure OpenStack image

description: >-
  Ensures that the specified image exists in the target OpenStack cloud.

inputs:
  os-client-config-file:
    description: The path of the OpenStack clouds file
    required: true
    default: ./clouds.yml
  os-cloud:
    description: The name of the cloud within the OpenStack clouds file
    required: true
    default: openstack
  environment:
    description: The environment to use
    required: true
  packer-template:
    description: The name of the Packer template to use
    required: true
  var-files:
    description: The var files to include
    required: true
  github-token:
    description: The GitHub API token to use to avoid rate limits
    required: true
  publish:
    description: Indicates whether to publish the image or not
    required: true
    default: ""
  s3-access-key:
    description: The access key to use when publishing to S3
    required: false
  s3-secret-key:
    description: The secret key to use when publishing to S3
    required: false

outputs:
  image-id:
    description: The ID of the image
    value: ${{ steps.build-image.outputs.image-id }}

runs:
  using: "composite"
  steps:
    - name: Set up Packer environment
      shell: bash
      run: ./bin/setup

    - name: Build image
      id: build-image
      shell: bash
      run: ./bin/build-image
      env:
        OS_CLIENT_CONFIG_FILE: ${{ inputs.os-client-config-file }}
        OS_CLOUD: ${{ inputs.os-cloud }}
        PACKER_GITHUB_API_TOKEN: ${{ inputs.github-token }}
        ENVIRONMENT: ${{ inputs.environment }}
        PACKER_TEMPLATE: ${{ inputs.packer-template }}
        ENV_VAR_FILES: ${{ inputs.var-files }}

    - name: Publish image
      id: publish-image
      shell: bash
      run: ./bin/publish-image ${{ steps.build-image.outputs.image-id }}
      env:
        OS_CLIENT_CONFIG_FILE: ${{ inputs.os-client-config-file }}
        OS_CLOUD: ${{ inputs.os-cloud }}
        ENVIRONMENT: ${{ inputs.environment }}
        ENV_VAR_FILES: ${{ inputs.var-files }}
        S3_ACCESS_KEY: ${{ inputs.s3-access-key }}
        S3_SECRET_KEY: ${{ inputs.s3-secret-key }}
      if: ${{ inputs.publish != '' }}

    - name: Delete image in OpenStack
      shell: bash
      run: openstack image delete ${{ steps.build-image.outputs.image-id }}
      env:
        OS_CLIENT_CONFIG_FILE: ${{ inputs.os-client-config-file }}
        OS_CLOUD: ${{ inputs.os-cloud }}
