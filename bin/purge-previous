#!/usr/bin/env bash

#####
# This script purges the images for the previous commit in S3, unless that commit is a tag
#####

set -eo pipefail

REPO_ROOT="$(dirname $(dirname $(realpath ${BASH_SOURCE[0]:-${(%):-%x}})))"
source "$REPO_ROOT/bin/env-vars"

set -x

# Make sure that tags have been fetched
git fetch --tags

# Get the commit hash of the previous commit
PREVIOUS_COMMIT="$(git rev-parse HEAD~1)"

# If the previous commit has any tags, we are done
TAGS="$(git tag --points-at "$PREVIOUS_COMMIT")"
[ -n "$TAGS" ] && exit

cat <<EOF > ~/.s3cfg
host_base = ${S3_HOST}
host_bucket = ${S3_HOST_BUCKET:-"$S3_HOST"}
access_key = ${S3_ACCESS_KEY}
secret_key = ${S3_SECRET_KEY}
use_https = True
EOF

# First, read the manifest
# If it doesn't exist, we are done
s3cmd get "s3://${S3_BUCKET}/${PREVIOUS_COMMIT}.manifest" manifest.json || exit

# Then delete every image in the manifest, if it exists
for image in $(jq -r '. | values[] | .name' manifest.json); do
    if s3cmd info "s3://${S3_BUCKET}/${image}.qcow2" > /dev/null; then
        s3cmd del "s3://${S3_BUCKET}/${image}.qcow2"
    fi
done

# The delete the manifest
s3cmd del "s3://${S3_BUCKET}/${PREVIOUS_COMMIT}.manifest"
